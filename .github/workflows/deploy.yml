# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      VPS_IP: "88.245.216.18" 
      PROJECT_DIR: "/root/frotaweb-odoo"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          SERVER_IP="7"
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $VPS_IP  >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh root@$VPS_IP << EOF
            set -e  # Exit on errors

            # Check if the directory exists
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Directory does not exist. Cloning the repository..."
              mkdir -p "$PROJECT_DIR"
              git clone git@github.com:$GITHUB_REPOSITORY.git "$PROJECT_DIR"
            fi

            # Navigate to the project directory
            cd "$PROJECT_DIR"

            # Ensure the repository is clean
            git reset --hard
            git clean -fd

            # Pull the latest changes
            git fetch origin main
            git reset --hard origin/main

            # Install dependencies and restart services (adjust as needed)
            # docker-compose up -d --build || pm2 restart app
          EOF
